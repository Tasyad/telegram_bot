# import telebot
# import json
# import telebot
# from telebot import types
# from telebot.types import  ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
# from dataBase import Database

# database = Database()


# bot = telebot.TeleBot('5378702776:AAEvxu4UJzndPxnxY8sbxDvaZFJW4iMU3a8')

# @bot.callback_query_handler(func=lambda call:True)
# def callback_query(call):
#     print(call.message.text)
#     req = call.data.split('_')

#     if req[0] == 'unseen':
#         bot.delete_message(call.message.chat.id, call.message.message_id)
#     elif 'pagination' in req[0]:
#         json_string = json.loads(req[0])
#         count = json_string['CountPage']
#         page = json_string['NumberPage']
#         if '–ê–∑–∏—è üåè' in call.message.text:
#             title = '–ê–∑–∏—è üåè'
#             table = 'organization2'
#         elif '–°–®–ê üá∫üá∏' in call.message.text:
#             title = '–°–®–ê üá∫üá∏'
#             table = 'organization'
#         elif '–ï–≤—Ä–æ–ø–∞ üåç' in call.message.text:
#             title = '–ï–≤—Ä–æ–ø–∞ üåç'
#             table = 'organization3'
#         else:
#              table = 'organization'
#         sqlTransaction = database.listColledjeForPage(tables=table, order='title', Page=page,
#                                                       SkipSize=1)
        
#         data = sqlTransaction[0][0]
#         count = sqlTransaction[2]

#         markup = InlineKeyboardMarkup()
#         markup.add(InlineKeyboardButton(text='–°–∫—Ä—ã—Ç—å', callback_data='unseen'))
#         if page == 1:
#             markup.add(InlineKeyboardButton(text=f'{page}/{count}', callback_data=f' '),
#                        InlineKeyboardButton(text=f'–í–ø–µ—Ä—ë–¥ ->',
#                                             callback_data="{\"method\":\"pagination\",\"NumberPage\":" + str(
#                                                 page + 1) + ",\"CountPage\":" + str(count) + "}"))
#         elif page == count:
#             markup.add(InlineKeyboardButton(text=f'<- –ù–∞–∑–∞–¥',
#                                             callback_data="{\"method\":\"pagination\",\"NumberPage\":" + str(
#                                                 page - 1) + ",\"CountPage\":" + str(count) + "}"),
#                        InlineKeyboardButton(text=f'{page}/{count}', callback_data=f' '))
#         else:
#             markup.add(InlineKeyboardButton(text=f'<- –ù–∞–∑–∞–¥', callback_data="{\"method\":\"pagination\",\"NumberPage\":" + str(page-1) + ",\"CountPage\":" + str(count) + "}"),
#                            InlineKeyboardButton(text=f'{page}/{count}', callback_data=f' '),
#                            InlineKeyboardButton(text=f'–í–ø–µ—Ä—ë–¥ ->', callback_data="{\"method\":\"pagination\",\"NumberPage\":" + str(page+1) + ",\"CountPage\":" + str(count) + "}"))
#         bot.edit_message_text(f'<b>{title}</b>\n\n'
#                                     f'<b>{data[3]}</b>\n\n'
#                                     f'<b>–ì–æ—Ä–æ–¥/–®—Ç–∞—Ç:</b> <i>{data[2]}</i>\n'
#                                     f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è :</b><i>{data[1]}</i>\n'
#                                     f'<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≥—Ä–∞–Ω—Ç:</b><i>{data[4]}</i>\n'
#                                     f'<b>–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞:</b><i>{data[5]}</i>\n'
#                                     f'<b>–¢—Ä–µ–±—É–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã SAT/IELTS:</b><i>{data[8]}</i>\n'
#                                     f'<b>–î–µ–¥–ª–∞–π–Ω –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫:</b><i> {data[7]}</i>',
#                                     parse_mode="HTML",reply_markup = markup, chat_id=call.message.chat.id, message_id=call.message.message_id)













@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–°–æ–≤–µ—Ç üå•")
    btn2 = types.KeyboardButton("–í–£–ó—ã –≤—Å–µ–≥–æ –º–∏—Ä–∞ üéì")
    btn3 = types.KeyboardButton("–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã üè´")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!üíó\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –ø—É–Ω–∫—Ç:".format(message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    if(message.text == "–°–æ–≤–µ—Ç üå•"):
        bot.send_message(message.chat.id, text= """ –ñ–µ–ª–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —Ç–µ—Å—Ç–∞–º: 
–ò–¥–µ–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
¬∑ IELTS ‚Äì –≤—ã—à–µ 7.5 –±–∞–ª–ª–æ–≤
¬∑ TOEFL- –≤—ã—à–µ 100 –±–∞–ª–ª–æ–≤
¬∑ SAT- –≤—ã—à–µ 1500 –±–∞–ª–ª–æ–≤

–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
¬∑ IELTS ‚Äì7.0 –±–∞–ª–ª–æ–≤
¬∑ TOEFL- 100 –±–∞–ª–ª–æ–≤
¬∑ SAT- 1450-1500 –±–∞–ª–ª–æ–≤

–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
¬∑ IELTS ‚Äì6.5 –±–∞–ª–ª–æ–≤
¬∑ TOEFL- 90-100 –±–∞–ª–ª–æ–≤
¬∑ SAT- 1400-1450 –±–∞–ª–ª–æ–≤

–ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
¬∑ IELTS ‚Äì6.0–±–∞–ª–ª–æ–≤
¬∑ TOEFL- 80-90 –±–∞–ª–ª–æ–≤
¬∑ SAT- 1300-1400 –±–∞–ª–ª–æ–≤ """)
    elif(message.text == "–í–£–ó—ã –≤—Å–µ–≥–æ –º–∏—Ä–∞ üéì"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn11 = types.KeyboardButton("–°–®–ê üá∫üá∏")
        btn22 = types.KeyboardButton("–ê–∑–∏—è üåè")
        btn33 = types.KeyboardButton("–ï–≤—Ä–æ–ø–∞ üåç")
        back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")
        markup.add(btn11, btn22, btn33, back)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –ø—É–Ω–∫—Ç: ", reply_markup=markup)

 
    elif(message.text == "–°–®–ê üá∫üá∏"):
        page = 1
        sqlTransaction = database.listColledjeForPage(tables = 'organization', order='title', Page=page, SkipSize=1) 
        data = sqlTransaction[0][0] 
        count = sqlTransaction[2]
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–°–∫—Ä—ã—Ç—å', callback_data='unseen'))
        markup.add(InlineKeyboardButton(text=f'{page}/{count}', callback_data=f' '),
        InlineKeyboardButton(text=f'–í–ø–µ—Ä—ë–¥ ->', callback_data="{\"method\":\"pagination\",\"NumberPage\":" + str(page+1) + ",\"CountPage\":" + str(count) + "}"))


        bot.send_message(message.from_user.id, f'<b>–°–®–ê üá∫üá∏</b>\n'
                                    f'<b>{data[6]}</b>\n\n'
                                    f'<b>{data[3]}</b>\n\n'
                                    f'<b>–ì–æ—Ä–æ–¥/–®—Ç–∞—Ç:</b> <i>{data[2]}</i>\n'
                                    f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è:</b><i>{data[1]}</i>\n'
                                    f'<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≥—Ä–∞–Ω—Ç:</b><i>{data[4]}</i>\n'
                                    f'<b>–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞:</b><i>{data[5]}</i>\n'
                                    f'<b>–¢—Ä–µ–±—É–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã SAT/IELTS:</b><i>{data[8]}</i>\n'
                                    f'<b>–î–µ–¥–ª–∞–π–Ω –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫:</b><i> {data[7]}</i>',
                     parse_mode="HTML", reply_markup = markup)

    elif(message.text == "–ê–∑–∏—è üåè"):
        page = 1
        sqlTransaction = database.listColledjeForPage(tables = 'organization2', order='title', Page=page, SkipSize=1) 
        data = sqlTransaction[0][0]
        count = sqlTransaction[2] 
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–°–∫—Ä—ã—Ç—å', callback_data='unseen'))
        markup.add(InlineKeyboardButton(text=f'{page}/{count}', callback_data=f' '),
        InlineKeyboardButton(text=f'–í–ø–µ—Ä—ë–¥ ->', callback_data="{\"method\":\"pagination\",\"NumberPage\":" + str(page+1) + ",\"CountPage\":" + str(count) + "}"))


        bot.send_message(message.from_user.id,f'–ê–∑–∏—è üåè\n' 
                                    f'<b>{data[6]}</b>\n\n'
                                    f'<b>{data[3]}</b>\n\n'
                                    f'<b>–ì–æ—Ä–æ–¥/–®—Ç–∞—Ç:</b> <i>{data[2]}</i>\n'
                                    f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è:</b><i>{data[1]}</i>\n'
                                    f'<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≥—Ä–∞–Ω—Ç:</b><i>{data[4]}</i>\n'
                                    f'<b>–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞:</b><i>{data[5]}</i>\n'
                                    f'<b>–¢—Ä–µ–±—É–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã SAT/IELTS:</b><i>{data[8]}</i>\n'
                                    f'<b>–î–µ–¥–ª–∞–π–Ω –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫:</b><i> {data[7]}</i>',
                     parse_mode="HTML", reply_markup = markup)
                     
    elif(message.text == "–ï–≤—Ä–æ–ø–∞ üåç"):
        page = 1
        sqlTransaction = database.listColledjeForPage(tables = 'organization3', order='title', Page=page, SkipSize=1) 
        data = sqlTransaction[0][0] 
        count = sqlTransaction[2]
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='–°–∫—Ä—ã—Ç—å', callback_data='unseen'))
        markup.add(InlineKeyboardButton(text=f'{page}/{count}', callback_data=f' '),
        InlineKeyboardButton(text=f'–í–ø–µ—Ä—ë–¥ ->', callback_data="{\"method\":\"pagination\",\"NumberPage\":" + str(page+1) + ",\"CountPage\":" + str(count) + "}"))


        bot.send_message(message.from_user.id, f'<b>–ï–≤—Ä–æ–ø–∞ üåç</b>\n'
                                    f'<b>{data[6]}</b>\n\n'
                                    f'<b>{data[3]}</b>\n\n'
                                    f'<b>–ì–æ—Ä–æ–¥/–®—Ç–∞—Ç:</b> <i>{data[2]}</i>\n'
                                    f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è:</b><i>{data[1]}</i>\n'
                                    f'<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≥—Ä–∞–Ω—Ç:</b><i>{data[4]}</i>\n'
                                    f'<b>–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞:</b><i>{data[5]}</i>\n'
                                    f'<b>–¢—Ä–µ–±—É–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã SAT/IELTS:</b><i>{data[8]}</i>\n'
                                    f'<b>–î–µ–¥–ª–∞–π–Ω –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫:</b><i> {data[7]}</i>',
                     parse_mode="HTML", reply_markup = markup)


    elif(message.text == "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã üè´"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("Logos üß°")
        btn2 = types.KeyboardButton("Ask_consulting üíô")
        btn3 = types.KeyboardButton("bstudy.kg üíú")
        btn4 = types.KeyboardButton("globalcompass.official ü§ç")
        back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")
        markup.add(btn1, btn2, btn3, btn4, back)
        bot.send_message(message.chat.id, text="–ê–¥—Ä–µ—Å–∞ —Ü–µ–Ω—Ç—Ä–æ–≤ –ø–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –∑–∞—Ä—É–±–µ–∂:", reply_markup=markup)

    elif(message.text == "Logos üß°"):
        bot.send_message(message.chat.id, "LOGOS education center 1 —Ñ–∏–ª–∏–∞–ª: https://2gis.kg/bishkek/geo/70000001052469306")
        bot.send_message(message.chat.id, "LOGOS education center 2 —Ñ–∏–ª–∏–∞–ª: https://2gis.kg/bishkek/geo/70000001022979189")
    elif(message.text == "Ask_consulting üíô"):
        bot.send_message(message.chat.id, "ASK CONSULTING: https://2gis.kg/bishkek/geo/70000001044667351")
    elif(message.text == "bstudy.kg üíú"):
        bot.send_message(message.chat.id, "British Study Centre 1 —Ñ–∏–ª–∏–∞–ª: https://2gis.kg/bishkek/geo/70000001059473424")
        bot.send_message(message.chat.id, "British Study Centre 2 —Ñ–∏–ª–∏–∞–ª: https://2gis.kg/bishkek/geo/70000001020454803")
    elif(message.text == "globalcompass.official ü§ç"):
        bot.send_message(message.chat.id, "ololo: https://2gis.kg/bishkek/geo/70000001032284718")
        
    elif (message.text == "–ù–∞–∑–∞–¥ üîô"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("–°–æ–≤–µ—Ç üå•")
        button2 = types.KeyboardButton("–í–£–ó—ã –≤—Å–µ–≥–æ –º–∏—Ä–∞ üéì")
        button3 = types.KeyboardButton("–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã üè´")
        markup.add(button1, button2, button3)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)










    # elif(message.text == "–Ø–∑—ã–∫–æ–≤—ã–µ –∫—É—Ä—Å—ã –ï–≤—Ä–æ–ø—ã"):
    #     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    #     btn1 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —è–∑—ã–∫–æ–≤—ã—Ö –∫—É—Ä—Å–∞—Ö")
    #     back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")
    #     markup.add(btn1, back)
    #     bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)
    
    # elif(message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —è–∑—ã–∫–æ–≤—ã—Ö –∫—É—Ä—Å–∞—Ö"):
    #     bot.send_message(message.chat.id, "–£ –º–µ–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏.GFVRGFV.")

    # elif(message.text == "–ù–∞–∑–∞–¥ üîô"):
    #     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    #     button1 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    #     button2 = types.KeyboardButton("–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞")
    #     button3 = types.KeyboardButton("–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç")
    #     button4 = types.KeyboardButton("–Ø–∑—ã–∫–æ–≤—ã–µ –∫—É—Ä—Å—ã –ï–≤—Ä–æ–ø—ã")
    #     markup.add(button1, button2, button3, button4)
    #     bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)


    # elif (message.text == "–ù–∞–∑–∞–¥ üîô—é"):
    #     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    #     button1 = types.KeyboardButton("–û–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏")
    #     button2 = types.KeyboardButton("–í–£–ó—ã –≤—Å–µ–≥–æ –º–∏—Ä–∞")
    #     button3 = types.KeyboardButton("–¶–µ–Ω—Ç—Ä—ã –ø–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é")
    #     markup.add(button1, button2, button3)
    #     bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
            
    else:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å ‚òπÔ∏è")

# bot.polling(none_stop=True)


if __name__ == '__main__':
    bot.polling(none_stop=True)